version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: onbloc
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - LOCALSTACK_HOST=localhost:4566
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 3s
      retries: 5

#  block-synchronizer:
#    build: .
#    command: ["./block-synchronizer"]
#    depends_on:
#      - postgres
#      - localstack
#    environment:
#      - DB_HOST=postgres
#      - SQS_ENDPOINT=http://localstack:4566

#  event-processor:
#    build: .
#    command: ["./event-processor"]
#    depends_on:
#      - postgres
#      - localstack
#    environment:
#      - DB_HOST=postgres
#      - SQS_ENDPOINT=http://localstack:4566
#
#  balance-api:
#    build: .
#    command: ["./balance-api"]
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#    environment:
#      - DB_HOST=postgres

volumes:
  postgres_data:
  redis_data: