package block_synchronizer

import (
	"context"
	"encoding/json"
	"github.com/stretchr/testify/assert"
	"gorm.io/driver/postgres"
	"gorm.io/gorm"
	"onbloc/internal/repository/postgresdb"
	tx_indexer "onbloc/internal/tx-indexer"
	"onbloc/pkg/messaging"
	"testing"
	"time"
)

func TestService_SyncTransactionRage(t *testing.T) {
	client := tx_indexer.NewClient("https://dev-indexer.api.gnoswap.io/graphql/query", 30*time.Second)
	db, err := gorm.Open(postgres.Open("host=localhost user=postgres password=password dbname=onbloc port=5432 sslmode=disable"), &gorm.Config{})
	assert.Nil(t, err)
	repository := postgresdb.NewRepository(db, 100)
	messageQueue, err := messaging.NewSQSClient(context.TODO(), "http://localhost:4566/000000000000/test-queue")
	service := NewService(client, repository, messageQueue, 100, 5)

	err = service.SyncTransactionRage(context.TODO(), 667, 669)
	assert.Nil(t, err)
}

func TestService_publishTransactionEvents(t *testing.T) {
	client := tx_indexer.NewClient("https://dev-indexer.api.gnoswap.io/graphql/query", 30*time.Second)
	db, err := gorm.Open(postgres.Open("host=localhost user=postgres password=password dbname=onbloc port=5432 sslmode=disable"), &gorm.Config{})
	assert.Nil(t, err)
	repository := postgresdb.NewRepository(db, 100)
	messageQueue, err := messaging.NewSQSClient(context.TODO(), "http://localhost:4566/000000000000/test-queue")
	assert.Nil(t, err)
	service := NewService(client, repository, messageQueue, 100, 5)

	var dummyTransactions tx_indexer.Transaction
	dummy := "{\n  \"index\": 0,\n  \"hash\": \"hQyYZSXPQFNdr/j2xVm/+rJxAr/3iSGh1vEUQRzp2Tc=\",\n  \"success\": true,\n  \"block_height\": 757,\n  \"gas_wanted\": 1000000000,\n  \"gas_used\": 57193635,\n  \"memo\": \"\",\n  \"response\": {\n    \"log\": \"msg:0,success:true,log:,events:[]\",\n    \"info\": \"\",\n    \"error\": \"\",\n    \"data\": \"\\n\\n\",\n    \"events\": [\n      {\n        \"type\": \"CalculateAmountToMint\",\n        \"func\": \"calculateAmountToMint\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"fromHeight\",\n            \"value\": \"694\"\n          },\n          {\n            \"key\": \"toHeight\",\n            \"value\": \"757\"\n          },\n          {\n            \"key\": \"year\",\n            \"value\": \"1\"\n          },\n          {\n            \"key\": \"singleBlockAmount\",\n            \"value\": \"14269406\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Mint\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"913241984\"\n          }\n        ]\n      },\n      {\n        \"type\": \"MintGNS\",\n        \"func\": \"MintGns\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"prevAddr\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"prevRealm\",\n            \"value\": \"gno.land/r/gnoswap/v1/emission\"\n          },\n          {\n            \"key\": \"mintedBlockHeight\",\n            \"value\": \"757\"\n          },\n          {\n            \"key\": \"mintedGNSAmount\",\n            \"value\": \"913241984\"\n          },\n          {\n            \"key\": \"accumMintedGNSAmount\",\n            \"value\": \"913241984\"\n          },\n          {\n            \"key\": \"accumLeftMintGNSAmount\",\n            \"value\": \"899999086758016\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Transfer\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g1cceshmzzlmrh7rr3z30j2t5mrvsq9yccysw9nu\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"684931488\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Transfer\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g1mjvd83nnjee3z2g7683er55me9f09688pd4mj9\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"182648396\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Transfer\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g100fnnlz5eh87p5hvwt8pf279lxaelm8k8md049\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"45662099\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Transfer\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"g10xg6559w9e93zfttlhvdmaaa0er3zewcr7nh20\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g17e3ykyqk9jmqe2y9wxe9zhep3p7cw56davjqwa\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"0\"\n          }\n        ]\n      },\n      {\n        \"type\": \"MintAndDistributeGns\",\n        \"func\": \"MintAndDistributeGns\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/emission\",\n        \"attrs\": [\n          {\n            \"key\": \"prevAddr\",\n            \"value\": \"g148tjamj80yyrm309z7rk690an22thd2l3z8ank\"\n          },\n          {\n            \"key\": \"prevRealm\",\n            \"value\": \"gno.land/r/gnoswap/v1/pool\"\n          },\n          {\n            \"key\": \"lastHeight\",\n            \"value\": \"0\"\n          },\n          {\n            \"key\": \"currentHeight\",\n            \"value\": \"757\"\n          },\n          {\n            \"key\": \"currentTimestamp\",\n            \"value\": \"1745842105\"\n          },\n          {\n            \"key\": \"mintedAmount\",\n            \"value\": \"913241984\"\n          },\n          {\n            \"key\": \"prevLeftAmount\",\n            \"value\": \"0\"\n          },\n          {\n            \"key\": \"distributedAmount\",\n            \"value\": \"913241983\"\n          },\n          {\n            \"key\": \"currentLeftAmount\",\n            \"value\": \"1\"\n          },\n          {\n            \"key\": \"gnsTotalSupply\",\n            \"value\": \"100000913241984\"\n          }\n        ]\n      },\n      {\n        \"type\": \"Transfer\",\n        \"func\": \"Transfer\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/gns\",\n        \"attrs\": [\n          {\n            \"key\": \"from\",\n            \"value\": \"g17290cwvmrapvp869xfnhhawa8sm9edpufzat7d\"\n          },\n          {\n            \"key\": \"to\",\n            \"value\": \"g1f7wpek7q67tkns27sw495u5yuu3a5wwjxw5l6l\"\n          },\n          {\n            \"key\": \"value\",\n            \"value\": \"100000000\"\n          }\n        ]\n      },\n      {\n        \"type\": \"PoolCreationFee\",\n        \"func\": \"CreatePool\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/pool\",\n        \"attrs\": [\n          {\n            \"key\": \"prevAddr\",\n            \"value\": \"g17290cwvmrapvp869xfnhhawa8sm9edpufzat7d\"\n          },\n          {\n            \"key\": \"prevRealm\",\n            \"value\": \"\"\n          },\n          {\n            \"key\": \"poolPath\",\n            \"value\": \"gno.land/r/demo/wugnot:gno.land/r/gnoswap/v1/gns:3000\"\n          },\n          {\n            \"key\": \"feeTokenPath\",\n            \"value\": \"gno.land/r/gnoswap/v1/gns\"\n          },\n          {\n            \"key\": \"feeAmount\",\n            \"value\": \"100000000\"\n          }\n        ]\n      },\n      {\n        \"type\": \"CreatePool\",\n        \"func\": \"CreatePool\",\n        \"pkg_path\": \"gno.land/r/gnoswap/v1/pool\",\n        \"attrs\": [\n          {\n            \"key\": \"prevAddr\",\n            \"value\": \"g17290cwvmrapvp869xfnhhawa8sm9edpufzat7d\"\n          },\n          {\n            \"key\": \"prevRealm\",\n            \"value\": \"\"\n          },\n          {\n            \"key\": \"token0Path\",\n            \"value\": \"gno.land/r/demo/wugnot\"\n          },\n          {\n            \"key\": \"token1Path\",\n            \"value\": \"gno.land/r/gnoswap/v1/gns\"\n          },\n          {\n            \"key\": \"fee\",\n            \"value\": \"3000\"\n          },\n          {\n            \"key\": \"sqrtPriceX96\",\n            \"value\": \"79228162514264337593543950337\"\n          },\n          {\n            \"key\": \"poolPath\",\n            \"value\": \"gno.land/r/demo/wugnot:gno.land/r/gnoswap/v1/gns:3000\"\n          },\n          {\n            \"key\": \"tick\",\n            \"value\": \"0\"\n          },\n          {\n            \"key\": \"tickSpacing\",\n            \"value\": \"60\"\n          }\n        ]\n      }\n    ]\n  }\n}"
	err = json.Unmarshal([]byte(dummy), &dummyTransactions)
	assert.Nil(t, err)

	service.publishTransactionEvents(context.TODO(), []tx_indexer.Transaction{dummyTransactions})

	messageCount := service.messageQueue.GetMessageCount(context.TODO())
	assert.Equal(t, messageCount, 6)
}
